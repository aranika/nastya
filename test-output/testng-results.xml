<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="8" passed="1" failed="0" skipped="7">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-02-04T22:49:17Z" name="Default suite" finished-at="2018-02-04T22:51:08Z" duration-ms="111198">
    <groups>
      <group name="Active">
        <method signature="TestProfilePage.activeEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="activeEqual" class="test.TestProfilePage"/>
      </group> <!-- Active -->
      <group name="Skype">
        <method signature="TestProfilePage.skypeEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="skypeEqual" class="test.TestProfilePage"/>
      </group> <!-- Skype -->
      <group name="MidleName">
        <method signature="TestProfilePage.midNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="midNameEqual" class="test.TestProfilePage"/>
      </group> <!-- MidleName -->
      <group name="Equal">
        <method signature="TestProfilePage.activeEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="activeEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.birthEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="birthEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.firstNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="firstNameEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.lastNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="lastNameEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.midNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="midNameEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.phoneEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="phoneEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.skypeEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="skypeEqual" class="test.TestProfilePage"/>
      </group> <!-- Equal -->
      <group name="Valid">
        <method signature="TestProfilePage.birthValid()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="birthValid" class="test.TestProfilePage"/>
      </group> <!-- Valid -->
      <group name="FirstName">
        <method signature="TestProfilePage.firstNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="firstNameEqual" class="test.TestProfilePage"/>
      </group> <!-- FirstName -->
      <group name="Phone">
        <method signature="TestProfilePage.phoneEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="phoneEqual" class="test.TestProfilePage"/>
      </group> <!-- Phone -->
      <group name="LastName">
        <method signature="TestProfilePage.lastNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="lastNameEqual" class="test.TestProfilePage"/>
      </group> <!-- LastName -->
      <group name="Profile">
        <method signature="TestProfilePage.activeEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="activeEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.birthEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="birthEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.birthValid()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="birthValid" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.firstNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="firstNameEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.lastNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="lastNameEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.midNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="midNameEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.phoneEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="phoneEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.skypeEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="skypeEqual" class="test.TestProfilePage"/>
      </group> <!-- Profile -->
      <group name="Date">
        <method signature="TestProfilePage.birthEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="birthEqual" class="test.TestProfilePage"/>
        <method signature="TestProfilePage.birthValid()[pri:0, instance:test.TestProfilePage@1d8bd0de]" name="birthValid" class="test.TestProfilePage"/>
      </group> <!-- Date -->
    </groups>
    <test started-at="2018-02-04T22:49:17Z" name="Default test" finished-at="2018-02-04T22:51:08Z" duration-ms="111198">
      <class name="test.TestProfilePage">
        <test-method is-config="true" signature="before()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:49:17Z" name="before" finished-at="2018-02-05T01:50:53Z" duration-ms="96426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="activeEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:50:53Z" name="activeEqual" finished-at="2018-02-05T01:50:53Z" duration-ms="410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activeEqual -->
        <test-method is-config="true" signature="after()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:50:53Z" name="after" finished-at="2018-02-05T01:50:55Z" duration-ms="1209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:50:55Z" name="before" finished-at="2018-02-05T01:50:55Z" duration-ms="0" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=63.0.3239.132)
  (Driver info: chromedriver=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 329 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.3.1', revision: '5234b325d5', time: '2017-03-10 09:10:29 +0000'
System info: host: 'DESKTOP-R95C30S', ip: '192.168.1.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73), userDataDir=C:\Users\EGOR\AppData\Local\Temp\scoped_dir4708_26023}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=63.0.3239.132, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=false, acceptInsecureCerts=false, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: d55b90ce419d9b26ed5c9e92ee9ae74a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=63.0.3239.132)
  (Driver info: chromedriver=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 329 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.3.1', revision: '5234b325d5', time: '2017-03-10 09:10:29 +0000'
System info: host: 'DESKTOP-R95C30S', ip: '192.168.1.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73), userDataDir=C:\Users\EGOR\AppData\Local\Temp\scoped_dir4708_26023}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=63.0.3239.132, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=false, acceptInsecureCerts=false, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: d55b90ce419d9b26ed5c9e92ee9ae74a
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:638)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:274)
	at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:98)
	at PageFactory.LoginPage.setPassword(LoginPage.java:26)
	at PageFactory.LoginPage.toLogin(LoginPage.java:37)
	at test.TestProfilePage.before(TestProfilePage.java:101)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="birthEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="birthEqual" finished-at="2018-02-05T01:51:08Z" duration-ms="3" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- birthEqual -->
        <test-method is-config="true" signature="after()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="after" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="before" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="birthValid()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="birthValid" finished-at="2018-02-05T01:51:08Z" duration-ms="2" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- birthValid -->
        <test-method is-config="true" signature="after()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="after" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="before" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="firstNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="firstNameEqual" finished-at="2018-02-05T01:51:08Z" duration-ms="7" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstNameEqual -->
        <test-method is-config="true" signature="after()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="after" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="before" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="lastNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="lastNameEqual" finished-at="2018-02-05T01:51:08Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastNameEqual -->
        <test-method is-config="true" signature="after()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="after" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="before" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="midNameEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="midNameEqual" finished-at="2018-02-05T01:51:08Z" duration-ms="2" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- midNameEqual -->
        <test-method is-config="true" signature="after()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="after" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="before" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="phoneEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="phoneEqual" finished-at="2018-02-05T01:51:08Z" duration-ms="2" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- phoneEqual -->
        <test-method is-config="true" signature="after()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="after" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="before" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="skypeEqual()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="skypeEqual" finished-at="2018-02-05T01:51:08Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skypeEqual -->
        <test-method is-config="true" signature="after()[pri:0, instance:test.TestProfilePage@1d8bd0de]" started-at="2018-02-05T01:51:08Z" name="after" finished-at="2018-02-05T01:51:08Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- test.TestProfilePage -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
